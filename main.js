const defaultCards = ["A", "K", "2", "3"].flatMap(i => [i,i,i,i]);

//const defaultCards = ['A','2','3','4','5','6','7','8','9','10','J','Q','K'].flatMap(i => [i,i,i,i]);
const cardsValue = {
          'A': 11,
          '2': 2, '3': 3,
          '4': 4, '5': 5,
          '6': 6, '7': 7,
          '8': 8, '9': 9,
          '10': 10, 'J': 10,
          'Q': 10, 'K': 10,
      };
       
// √Çm thanh
const hitSound = new Audio('assets/sounds/swish.m4a')
      winSound = new Audio('assets/sounds/win.mp3')
      loseSound = new Audio('assets/sounds/lose.mp3');
// B√†i c·ªßa t·ª´ng player ƒëang c√≥
let yourCards = []
    botCards = [];
    
// *Database*
let game = {
    'you': {'box': '.your-box', 'score': 0, 'scoreSpan': '#your-score', 'cards': yourCards},
    'bot': {'box': '.bot-box', 'score': 0, 'scoreSpan': '#bot-score', 'cards': botCards},
};

let you = game.you
    bot = game.bot
    yourBox = document.querySelector(you.box)
    botBox = document.querySelector(bot.box)
    startBtn = document.querySelector('#start')
    hitBtn = document.querySelector('#hit')
    result = document.querySelector('#result');
     
     
// X√°o b√†i
let cards;
function shuffleCards(defaultCards) {
    cards = [...defaultCards];
    cards.sort(() => Math.random() -0.5);
}
shuffleCards(defaultCards);

function gameStart(player) {
    // R√∫t 2 l√°
    gameHit(player);
    gameHit(player);
    
    // ƒê·ªïi n√∫t B·ªëc th√†nh R√∫t
    startBtn.style.display = 'none';
    hitBtn.style.display = 'inline-block';
}
    
function gameHit(player) {
    // Khi player/bot < 21 ƒëi·ªÉm ho·∫∑c kh√¥ng tr√∫ng TH ƒë·∫∑c bi·ªát m·ªõi ƒë∆∞·ª£c r√∫t
    if (player.score < 21 && updateScore(player) != "NL" && updateScore(player) != "XB" && updateScore(player) != "XD" && stand != true) {
        createCard(player);
        updateScore(player);
        hitSound.play();
    }
}

function createCard(player) {
    // B·ªëc l√° cu·ªëi c√πng
    let randomCard = cards.pop();
    player.cards.push(randomCard);
        
    cardImg = document.createElement('img');
    cardImg.src = `assets/img/${randomCard}.png`;
    document.querySelector(player.box).append(cardImg);
        
    // ƒê·ªïi gi√° tr·ªã c·ªßa A t·ª´ 11 -> 10 ho·∫∑c 1 cho ph√π h·ª£p
    aceValue(player, randomCard);
        
    player.score = 0; // reset l·∫°i ƒëi·ªÉm tr√°nh t√≠nh sai
    // Ch·∫°y l·∫°i v√≤ng ƒë·∫øm ƒëi·ªÉm ƒë·ªÉ ƒë·ªïi s·ªë ƒëi·ªÉm khi Ace ƒë·ªïi 
    for (let i = 0; i < player.cards.length; i++) {
        player.score += cardsValue[player.cards[i]]
    }
}

function aceValue(player, card) {
    if (player.score + cardsValue[card] > 21) {cardsValue['A'] = 10;}
    if (player.score + cardsValue[card] > 21 || updateScore(player) === "NL") {cardsValue['A'] = 1;}
}

function updateScore(player) {
    // X√¨ B√†n
    if (JSON.stringify(player.cards) == JSON.stringify(["A", "A"])) {
        document.querySelector(player.scoreSpan).textContent = 'X√å B√ÄN!';
        document.querySelector(player.scoreSpan).style.color = 'yellow';
        return "XB";
    }
    // X√¨ D√°ch
    else if ((player.cards.includes("A") && player.cards.length === 2) && (player.cards.includes("K") || player.cards.includes("Q") || player.cards.includes("J") || player.cards.includes("10"))) {
        document.querySelector(player.scoreSpan).textContent = 'X√å D√ÅCH!';
        document.querySelector(player.scoreSpan).style.color = 'yellow';
        return "XD";
    }
    // Ng≈© Linh
    else if (player.cards.length === 5 && player.score <= 21) {
        document.querySelector(player.scoreSpan).textContent = 'NG≈® LINH!';
        document.querySelector(player.scoreSpan).style.color = 'yellow';
        return "NL";
    }
    // L·ªë 28
    else if (player.score >= 28) {
        document.querySelector(player.scoreSpan).textContent = 'C√íN C√ÅI N·ªäT';
        document.querySelector(player.scoreSpan).style.color = 'crimson';
    }
    // qu·∫Øc
    else if (player.score > 21) {
        document.querySelector(player.scoreSpan).textContent = 'QU·∫ÆC';
        document.querySelector(player.scoreSpan).style.color = 'red';
    }
    // b√¨nh th∆∞·ªùng
    else {
        document.querySelector(player.scoreSpan).textContent = player.score;
    }
}

let stand;
function gameStand() {
    if (you.score < 16 && you.cards.length != 5) {
        result.textContent = "B√†i Non!";
        result.style.color = "red";
        // D·ª´ng h√†m ƒë·ªÉ kh√¥ng cho m√°y b·ªëc b√†i
        return 0;
    }
    // M√°y b·ªëc 2 l√° b√†i
    gameStart(bot);
    if (updateScore(you) == "XB") {
      decideWinner();
      return 0;
    }

    
    // M√°y lu√¥n r√∫t khi d∆∞·ªõi 16 n√∫t
    while (bot.score < 16) {
        gameHit(bot);
    }
  
    // Khi m√°y >= 16 n√∫t th√¨ 33.33333% r√∫t
    if (bot.score <= 18 && Math.floor(Math.random()*3) === 0) {
        gameHit(bot);
    }
    
    // ƒë√°nh d·∫•u ƒë√£ ch·∫°y xong func
    stand = true;
    
    decideWinner();
}

function decideWinner() {
  if (you.score <= 21 && bot.score <= 21) {
    if (you.score === bot.score) {
      result.textContent = "H√≤a";
    }
    else if (updateScore(bot) != "NL" && ((updateScore(you) === "XD" && updateScore(bot) != "XB") || updateScore(you) === "XB" || (updateScore(you) === "NL" && (updateScore(bot) != "XD" || updateScore(bot) != "XB")) || you.score > bot.score))  {
      result.textContent = "B·∫°n Th·∫Øng üéâ";
    }
    else {result.textContent = "B·∫°n Thua üò∂";}
  }
  
  // N·∫øu c·∫£ hai c√πng qu·∫Øc
  else if (you.score > 21 && bot.score > 21) { result.textContent = "Qu·∫Øc H√≤a ü•¥"; }
  // N·∫øu ng∆∞·ªùi qu·∫Øc => m√°y win
  else if (bot.score > 21) { result.textContent = "B·∫°n Th·∫Øng üéâ"; }
  // M√°y qu·∫Øc
  else { result.textContent = "B·∫°n Thua üò∂"; }

  gameSoundColor();
}

function gameReset() {
    if (stand != true) {
        alert("B·∫°n ch∆∞a ch∆°i xong v√°n hi·ªán t·∫°i!");
    }
    else {
        let cardImgs = document.querySelectorAll('.main img');
        for (let i = 0; i<cardImgs.length; i++) {
            cardImgs[i].remove();
        }
    
        you.cards = [];
        bot.cards = [];
        cardsValue['A'] = 11;
        shuffleCards (defaultCards);
        stand = false;
    
        startBtn.style.display = 'inline-block';
        hitBtn.style.display = 'none';
    
        // Reset Score
        you.score = 0;
        bot.score = 0;
        document.querySelector(you.scoreSpan).textContent = 0;
        document.querySelector(bot.scoreSpan).textContent = 0;
        document.querySelector(you.scoreSpan).style.color = 'white';
        document.querySelector(bot.scoreSpan).style.color = 'white';
        result.textContent = "";
    }
}

function gameSoundColor() {
  if (result.textContent === "B·∫°n Th·∫Øng üéâ") {
    result.style.color = "green";
    winSound.play();
  }
  else if (result.textContent === "B·∫°n Thua üò∂") {
    result.style.color = "red";
    loseSound.play();
  } else {
    result.style.color = "brown";
  }
}